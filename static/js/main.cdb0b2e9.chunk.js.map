{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"wNACMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,2CASFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MASb,OAAO,gCAAQJ,KAaFS,EAXD,SAACV,GAAW,IAChBE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBAEvB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCUjDE,E,4MA1CbC,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBR,EADgB,EAChBA,KAAMS,EADU,EACVA,MAEd,EAAKC,SAAL,eACGV,EAAOS,K,EAGZE,WAAa,WACX,EAAKjB,MAAMkB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,e,EAErBA,aAAe,CACbd,KAAM,GACNC,IAAK,I,EAGPY,MAAQ,EAAKC,a,uDACF,IAAD,EACcC,KAAKF,MAAnBb,EADA,EACAA,KAAMC,EADN,EACMA,IAEd,OACE,iCACE,uBAAOe,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHT,MAAOT,EACPmB,SAAUJ,KAAKT,eACjB,uBAAOU,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHT,MAAOR,EACPkB,SAAUJ,KAAKT,eACjB,uBAAOW,KAAK,SAASR,MAAM,SAASP,QAASa,KAAKJ,oB,GArCvCS,aC+BJC,E,4MA5BbR,MAAQ,CACNS,WAAY,I,EAEdnB,gBAAkB,SAACJ,GAAW,IACpBuB,EAAe,EAAKT,MAApBS,WAER,EAAKZ,SAAS,CACZY,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM1B,Q,EAInBa,aAAe,SAACY,GACd,EAAKd,SAAS,CAAEY,WAAW,GAAD,mBAAM,EAAKT,MAAMS,YAAjB,CAA6BE,O,uDAE9C,IACDF,EAAeP,KAAKF,MAApBS,WAER,OACE,sBAAKI,UAAU,YAAf,UACE,cAAC,EAAD,CAAO9B,cAAe0B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAMS,aAAcG,KAAKH,sB,GAtBfQ,a,MCClBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cdb0b2e9.chunk.js","sourcesContent":["import React, { Component } from 'react'\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  )\n}\n// const TableBody = () => {\n//   //Note that if return is contained to one line.it does not need parentheses\n//   return <tbody />\n// }\nconst TableBody = (props) => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    )\n  })\n  return <tbody>{rows}</tbody>\n}\nconst Table = (props) => {\n  const { characterData, removeCharacter } = props\n\n  return (\n    <table>\n      <TableHeader />\n      <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n    </table>\n  )\n}\n\nexport default Table","import React, { Component } from 'react'\n\nclass Form extends Component {\n  handleChange = (event) => {\n    const { name, value } = event.target\n\n    this.setState({\n      [name]: value,\n    })\n  }\n  submitForm = () => {\n    this.props.handleSubmit(this.state)\n    this.setState(this.initialState)\n  }\n  initialState = {\n    name: '',\n    job: '',\n  }\n\n  state = this.initialState\n  render () {\n    const { name, job } = this.state;\n\n    return (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={this.handleChange} />\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          id=\"job\"\n          value={job}\n          onChange={this.handleChange} />\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n\n}\nexport default Form;","import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n  state = {\n    characters: []\n  }\n  removeCharacter = (index) => {\n    const { characters } = this.state\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      }),\n    })\n  }\n  handleSubmit = (character) => {\n    this.setState({ characters: [...this.state.characters, character] })\n  }\n  render () {\n    const { characters } = this.state\n\n    return (\n      <div className=\"container\">\n        <Table characterData={characters} removeCharacter={this.removeCharacter} />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}